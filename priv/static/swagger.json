{
  "swagger": "2.0",
  "info": {
    "version": "0.28.2.0",
    "title": "Bergendahls.OrderHistoryService.Api"
  },
  "paths": {
    "/healthcheck": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Gets health of service",
        "description": "Used for polling the service for current status",
        "operationId": "Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/customers/me/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets all orders by JWT-token",
        "description": "Used for getting all orders by a customer with JWT-token",
        "operationId": "GetCustomerOrdersByToken",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          }
        }
      }
    },
    "/customers/{customerId}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets all orders by customerId",
        "description": "Used for getting all orders by a customer, ordered by descending delivery date",
        "operationId": "GetCustomerOrdersByCustomerId",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          }
        }
      }
    },
    "/customers/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets all orders containing bags for all customers within the provided range",
        "description": "Gets all orders containing bags for all customers within the provided range",
        "operationId": "GetOrdersForAllCustomers",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Bags",
              "FlexBags"
            ]
          },
          {
            "name": "From",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "To",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CustomerOrderGroupList"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/customers/me/orders/products": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the most purchased productIds by JWT-token",
        "description": "Gets size most purchased productIds for customer with JWT-token.\r\nIf customer has purchased n items and n is less than size, n productIds will be returned",
        "operationId": "GetTopProductsByToken",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "description": "Number of days back in time to aggregate sales for",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of products to fetch",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTopProductsResponse"
            }
          }
        }
      }
    },
    "/customers/{customerId}/orders/products": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the most purchased productIds for a specific customer",
        "description": "Gets size most purchased productIds for customer with customerId.\r\nIf customer has purchased n items and n is less than size, n productIds will be returned",
        "operationId": "GetTopProductsByCustomer",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "KDB ID of customer",
            "required": true,
            "type": "string"
          },
          {
            "name": "days",
            "in": "query",
            "description": "Number of days back in time to aggregate sales for",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of products to fetch",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTopProductsResponse"
            }
          }
        }
      }
    },
    "/customers/me/orders/recipes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the most purchased recipeIds by JWT-token",
        "description": "Gets size most purchased recipeIds for customer with JWT-token.\r\nIf customer has purchased n recipes and n is less than size, n recipeIds will be returned",
        "operationId": "GetMostBoughtRecipesByCustomerToken",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTopRecipesResponse"
            }
          }
        }
      }
    },
    "/customers/{customerId}/orders/recipes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the most purchased recipeIds for a specific customer",
        "description": "Gets size most purchased recipeIds for customer with customerId.\r\nIf customer has purchased n recipes and n is less than size, n recipeIds will be returned",
        "operationId": "GetMostBoughtRecipesByCustomerId",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTopRecipesResponse"
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets an order by its orderId",
        "description": "Used for getting orders by orderId",
        "operationId": "GetOrderByOrderId",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderContainer"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customers/me/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets order by JWT-token and orderId",
        "description": "Used for getting an order by JWT-token and orderId",
        "operationId": "GetOrderByTokenAndOrderId",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderContainer"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customers/{customerId}/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets order by customerId and orderId",
        "description": "Used for getting an order by customerId and orderId",
        "operationId": "GetOrderByCustomerIdAndOrderId",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderContainer"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "OrderList": {
      "type": "object",
      "properties": {
        "orders": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderListItem"
          }
        },
        "meta": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "OrderListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "deliveryDate": {
          "type": "string"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalWriteDowns": {
          "format": "double",
          "type": "number"
        },
        "deliveryMethod": {
          "enum": [
            "Home",
            "Pickup"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "Pending",
            "Cancelled",
            "Done",
            "Replaced"
          ],
          "type": "string"
        }
      }
    },
    "CustomerOrderGroupList": {
      "type": "object",
      "properties": {
        "orders": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerOrderGroup"
          }
        }
      }
    },
    "CustomerOrderGroup": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "deliveryDate": {
          "type": "string"
        },
        "deliverySlotId": {
          "type": "string"
        },
        "deliveryFrom": {
          "type": "string"
        },
        "deliveryTo": {
          "type": "string"
        },
        "lines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerOrderGroupLine"
          }
        }
      }
    },
    "CustomerOrderGroupLine": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "$ref": "#/definitions/CustomerOrderGroupLineQuantity"
        },
        "type": {
          "enum": [
            "Bags",
            "FlexBags"
          ],
          "type": "string"
        }
      }
    },
    "CustomerOrderGroupLineQuantity": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "unit": {
          "format": "int32",
          "type": "integer"
        },
        "originalUnit": {
          "type": "string"
        }
      }
    },
    "GetTopProductsResponse": {
      "type": "object",
      "properties": {
        "productIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetTopRecipesResponse": {
      "type": "object",
      "properties": {
        "recipeIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrderContainer": {
      "required": [
        "salesOrder",
        "salesInvoices",
        "customer"
      ],
      "type": "object",
      "properties": {
        "salesOrder": {
          "$ref": "#/definitions/SalesOrder"
        },
        "salesInvoices": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesInvoice"
          }
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      }
    },
    "SalesOrder": {
      "type": "object",
      "properties": {
        "lines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderLine"
          }
        },
        "lineGroups": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderLineGroup"
          }
        },
        "state": {
          "enum": [
            "Pending",
            "Cancelled",
            "Done",
            "Replaced"
          ],
          "type": "string"
        },
        "deliverySlotId": {
          "type": "string"
        },
        "deliveryDate": {
          "type": "string"
        },
        "deliveryFrom": {
          "type": "string"
        },
        "deliveryTo": {
          "type": "string"
        },
        "deliveryMethod": {
          "enum": [
            "Home",
            "Pickup"
          ],
          "type": "string"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/Address"
        },
        "deliveryStoreNo": {
          "type": "string"
        },
        "totalWriteDownAmount": {
          "format": "double",
          "type": "number"
        },
        "totalCancelledAmount": {
          "format": "double",
          "type": "number"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "documentNo": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalDiscount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SalesInvoice": {
      "type": "object",
      "properties": {
        "lines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesInvoiceLine"
          }
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "documentNo": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalDiscount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "SalesOrderLine": {
      "type": "object",
      "properties": {
        "cancelledQuantity": {
          "format": "double",
          "type": "number"
        },
        "writeDownSummary": {
          "$ref": "#/definitions/SalesOrderWriteDownSummary"
        },
        "grossWeight": {
          "format": "double",
          "type": "number"
        },
        "allowances": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowanceEntity"
          }
        },
        "cancelledAmount": {
          "format": "double",
          "type": "number"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "lineNo": {
          "format": "double",
          "type": "number"
        },
        "itemNo": {
          "type": "string"
        },
        "ean": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "grossPricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "priceUnit": {
          "type": "string"
        },
        "priceQuantityFactor": {
          "format": "double",
          "type": "number"
        },
        "quantity": {
          "$ref": "#/definitions/QuantityDetails"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalDiscount": {
          "format": "double",
          "type": "number"
        },
        "isActive": {
          "type": "boolean"
        },
        "lineType": {
          "enum": [
            "Item",
            "Charge",
            "Allowance",
            "Markup",
            "StoreCredit",
            "GiftCard"
          ],
          "type": "string"
        },
        "articleType": {
          "type": "string"
        },
        "isReturnablePackageDeposits": {
          "type": "boolean"
        }
      }
    },
    "SalesOrderLineGroup": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "subGroups": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesOrderLineGroup"
          }
        },
        "groupAmount": {
          "$ref": "#/definitions/GroupAmount"
        },
        "lineSum": {
          "$ref": "#/definitions/GroupAmount"
        },
        "lineWriteDownSum": {
          "$ref": "#/definitions/GroupAmount"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryTwoLetterISORegionName": {
          "type": "string"
        }
      }
    },
    "SalesInvoiceLine": {
      "type": "object",
      "properties": {
        "cancelledQuantity": {
          "format": "double",
          "type": "number"
        },
        "writeDownSummary": {
          "$ref": "#/definitions/SalesOrderWriteDownSummary"
        },
        "grossWeight": {
          "format": "double",
          "type": "number"
        },
        "allowances": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowanceEntity"
          }
        },
        "cancelledAmount": {
          "format": "double",
          "type": "number"
        },
        "entityId": {
          "format": "uuid",
          "type": "string"
        },
        "lineNo": {
          "format": "double",
          "type": "number"
        },
        "itemNo": {
          "type": "string"
        },
        "ean": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "grossPricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "priceUnit": {
          "type": "string"
        },
        "priceQuantityFactor": {
          "format": "double",
          "type": "number"
        },
        "quantity": {
          "$ref": "#/definitions/QuantityDetails"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalDiscount": {
          "format": "double",
          "type": "number"
        },
        "isActive": {
          "type": "boolean"
        },
        "lineType": {
          "enum": [
            "Item",
            "Charge",
            "Allowance",
            "Markup",
            "StoreCredit",
            "GiftCard"
          ],
          "type": "string"
        },
        "articleType": {
          "type": "string"
        },
        "isReturnablePackageDeposits": {
          "type": "boolean"
        }
      }
    },
    "SalesOrderWriteDownSummary": {
      "required": [
        "amount",
        "taxAmount",
        "totalAmount"
      ],
      "type": "object",
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AllowanceEntity": {
      "type": "object",
      "properties": {
        "allowanceId": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "enum": [
            "Campaign",
            "Discount",
            "WriteDown",
            "ReturnDeduction"
          ],
          "type": "string"
        },
        "valueType": {
          "enum": [
            "Amount",
            "PricePerUnit"
          ],
          "type": "string"
        },
        "statementType": {
          "enum": [
            "Discount",
            "Hidden",
            "Line"
          ],
          "type": "string"
        },
        "statementType2": {
          "enum": [
            "Amount",
            "Percentage"
          ],
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "allowanceCorrelationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "QuantityDetails": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "unit": {
          "type": "string"
        }
      }
    },
    "GroupAmount": {
      "type": "object",
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "quantity": {
          "$ref": "#/definitions/QuantityDetails"
        },
        "pricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "grossPricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "listPricePerUnit": {
          "format": "double",
          "type": "number"
        },
        "totalWriteDownAmount": {
          "format": "double",
          "type": "number"
        },
        "totalCancelledAmount": {
          "format": "double",
          "type": "number"
        }
      }
    }
  }
}
